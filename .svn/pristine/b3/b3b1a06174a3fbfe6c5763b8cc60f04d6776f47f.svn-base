<template>
  <div class="work">
    <ul class="sign">
      <li :class="curr==0?'active':''" @click="curr=0">外勤签到</li>
      <li :class="curr==1?'active':''" @click="clickSign">签到列表</li>
    </ul>

    <div class="waiqin" v-show="curr==0">
      <baidu-map  class="map" :center="center" :zoom="zoom" @ready="handler" @click="mapSearch"> 
        <!-- 障碍物的设置。因为要跟随滑动，以及某个点的提醒 -->
        <bm-marker :position="center" :dragging="true">
            <!-- <bm-info-window :show="true">{{maptitle}}</bm-info-window> -->
        </bm-marker>
      </baidu-map>

      <div class="qiandao">
        <ul>
          <li @click="mapSearch">地点微调</li>
          <li>
            <p>{{qiandaoAddress}}</p>
            <!-- <p><input type="text" placeholder="填写备注" disabled="diasbled" id="note" v-model="note"> <img src="../images/pen.png" alt="" @click="edit"></p> -->
            <!-- <p><input type="text" placeholder="填写备注" id="note" v-model="note"> <img src="../images/pen.png" alt=""></p> -->

            <!-- 暂不添加拜访人员 -->
            <!-- <van-cell title="拜访人员" is-link :value="customerName" @click="contactCcbSel" /> -->
            <van-field
                v-model="note"
                rows="2"
                autosize
                label="备注"
                type="textarea"
                placeholder="填写备注"
                show-word-limit
              />
          </li>
        </ul>
      </div>

      <div class="xianchangSign" :class="{'ifRed': ifRed}" @click="xianchangSign">
        <p class="signBtn">{{signText}}</p>
        <p class="currentTime">{{currentTime}}</p>
      </div>
    </div>
    <div class="signList" v-show="curr==1">
      <img src="../images/mapBg.png" alt="" width="100%">
      <div v-if="list != ''">
        <div class="list" v-for="(item,index) in list" :key="index">
          <p>
            <img src="../images/avatar1.png" alt="">
            <span>{{userName}}</span>
            <!-- <span>销售经理</span> -->
          </p>
          <div>
            <!-- <img src="../images/icon1.png" alt="" class="icon1" v-if="item.customerName">
            <img src="../images/icon.png" alt="" v-else> -->
            <ul>
              <li v-if="item.customerName">
                <img src="../images/customerName.png" alt="">
                <span>{{item.customerName}}</span>
              </li>
              <li>
                <img src="../images/time.png" alt="">
                <span>{{item.add_time}}</span>
              </li>
              <li>
                <img src="../images/dingwei.png" alt="">
                <span>{{item.address}}</span>
              </li>
              <li v-if="item.note">
                <img src="../images/beizhu.png" alt="">
                <span>{{item.note}}</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div v-else class="zanwu">
            <img src="../images/zanwu.png" alt="">
            <span>暂无内容</span>
        </div>
        <van-loading v-if="loading" size="24px">加载中...</van-loading>
      
    </div>
    <tabbar :idx="1"></tabbar>
  </div>
</template>
<script>
import tabbar from "@/components/bottom";
import BaiduMap from 'vue-baidu-map/components/map/Map.vue'
export default {
  name: "work",
  components: {
    tabbar
  },
  data () {
    return {
      curr: 0,
      loading: 0,
        center: {lng: 113.39852, lat: 34.91405}, // 地图初始化的位置
        zoom: 14, // 地图内的大小
        maptitle: "", // 这个是选择某个点的提醒以及搜索附近的东西的依据
        location: '', // 这个是搜索下的东西
        locationdata: { // 这个是选择搜索列表中数据的title以及经纬度
          address: "",
          lng: '',
          lat: ''
        },
        geolocation: "",
        biaoji: false,

        qiandaoAddress: '',
        note: '',
        list: [],
        userName: '',
        lat: '',
        lon: '',

        locationIf: true,
        page: 1,
        pageSize: 10,
        totalPage: 1,
        customer_id: '',
        customerName: '请选择',
        customerNamSl: '',

        signText: '考勤签到',
        ifRed: false,
        timer: "",//定义一个定时器的变量
        currentTime: '', // 获取当前时间
        currentDate: '',
    };
  },
  mounted(){
    this.userName = localStorage.getItem('userName')
    
    window.onAndroid = this.onAndroid // 判断打开设备是否是Android手机
    window.onGetLocation = this.onGetLocation
    window.geoc = null
    window.convertor = null
    window.vue = this

    window.addEventListener("scroll", this.scrollBottom);

    let customerName = this.$route.query.customerName;
    let customer_id = this.$route.query.customer_id;
    if(customer_id){
      this.customer_id = customer_id;
      this.customerName = customerName
      this.customerNamSl = customerName
    }

    let address = this.$route.query.address
    if(address){
      this.locationIf = false
      this.locationdata.address = this.$route.query.address
      this.locationdata.lng = this.$route.query.lng
      this.locationdata.lat = this.$route.query.lat
    }else{
      this.locationIf = true
    }

  },
  methods:{
    contactCcbSel(){
      this.$router.push({
        path: '/contactCcbSel',
        query: {
          fromPath: 'work'
        }
      })
    },
    scrollBottom(e) {
      let that = this;
       var scrollTop = e.target.documentElement.scrollTop || e.target.body.scrollTop;
        // console.log(scrollTop)
        let clientHeight = document.documentElement.clientHeight; /*当前可视高度*/
        let scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight); /*文档完整的高度*/
        if ((scrollHeight - clientHeight - scrollTop) <= 0 && that.page < that.totalPage) {
          that.page+=1
          that.loading = 1
          that.getList();
        }
    },
    mapSearch(){
      this.$router.push({
        path: "/mapSearch"
      });
    },
    
    // 由于百度地图 JS API 只有 JSONP 一种加载方式，因此 BaiduMap 组件及其所有子组件的渲染只能是异步的。
    // 因此，请使用在组件的 ready 事件来执行地图 API 加载完毕后才能执行的代码，不要试图在 vue 自身的生命周期中调用 BMap 类，更不要在这些时机修改 model 层。
        handler ({BMap, map}) {
            window.map = map; //注册为全局
            var that = this;  // map方法中的this指向不对。所有申明一个。。小细节的东西
            that.loading = 0
              // 刚进入页面中的定位，需要向用户授权
            var point = new BMap.Point(113.39852,34.897445);
        
            var geolocation = new BMap.Geolocation();
            var geoc = new BMap.Geocoder();    
            window.geoc = geoc

            var convertor = new BMap.Convertor();
            window.convertor = convertor

            var isAndroid = localStorage.getItem('isAndroid')
            if(isAndroid=='123'){
              if(!that.locationIf){
                // console.log("选择位置")
                that.qiandaoAddress = that.locationdata.address
                that.center.lng = that.locationdata.lng
                that.center.lat = that.locationdata.lat
                var pointSel = new BMap.Point(that.locationdata.lng, that.locationdata.lat);
                var markerSel = new BMap.Marker(pointSel);
                  map.addOverlay(markerSel);
                  map.panTo(pointSel);

              }else{
                android.requestLocation()
              }
            }else{
              this.geolocation = geolocation;
              if(!that.locationIf){
                // console.log("选择位置")
                that.qiandaoAddress = that.locationdata.address
                that.center.lng = that.locationdata.lng
                that.center.lat = that.locationdata.lat
                var pointSel = new BMap.Point(that.locationdata.lng, that.locationdata.lat);
                var markerSel = new BMap.Marker(pointSel);
                  map.addOverlay(markerSel);
                  map.panTo(pointSel);

              }else{
                // console.log("定位")
                geolocation.getCurrentPosition(function(r){
                  if(this.getStatus() == BMAP_STATUS_SUCCESS){
                    var marker = new BMap.Marker(r.point);
                    map.addOverlay(marker);
                    map.panTo(r.point);
                    var pt = r.point
                    geoc.getLocation(pt, function(rs){
                      // console.log(rs)
                      var addComp = rs.addressComponents;
                      that.qiandaoAddress = addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber;
  
                    }); 
                  }
                  else {
                    alert('failed'+this.getStatus());
                  }        
                },{enableHighAccuracy: true})
              }
              
            }


            
        },
        // 移动开始
        movemapstart(){
            this.biaoji = false;
        },
        onAndroid(){
          // this.$isAndroid = true
          localStorage.setItem('isAndroid','123')
        },

        // 执行完Android方法，获取坐标
        onGetLocation(lat,lon){
          var that = this
          var centerGet = new BMap.Point(lon, lat)
          var convertor = window.convertor;
          var pointArr = [];
          pointArr.push(centerGet);
          convertor.translate(pointArr, 1, 5, function(data){
            if(data.status === 0){
              // that.qiandaoAddress = data;
              that.lon = data.points[0].lng
              that.lat = data.points[0].lat
              that.center.lng = data.points[0].lng
              that.center.lat = data.points[0].lat
              var geoc = window.geoc
              var center = Object.assign({},that.center)
              center = new BMap.Point(center.lng,center.lat)
                geoc.getLocation(center, function(rs){
                    var addComp = rs.addressComponents;
                    if(addComp.province){
                      that.qiandaoAddress = addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber;
                    }
                  }); 
            }
          })


          
        },

        // 点击切换签到列表
        clickSign(){
          this.curr=1
          this.getList();
          // this.$api.signList().then(res=>{
          //   if(res.errno === 0){
          //     if(res.data){
          //       this.list = res.data.data
          //     }
          //   }
          // })
        },
        getList() {
          let that = this;
          this.$api.signList({page: that.page, size: that.pageSize}).then(res => {
            that.totalPage = res.data.total
            if (res.errno === 0) {
                if(that.page == 1){
                  that.loading = 0;
                  that.list = res.data.data
                }else if(res.data.data.length > 0){
                  that.list.push(...res.data.data)
                  if(res.data.data.length < that.pageSize){
                    that.loading = 0
                  }
                }else if(that.page == that.totalPage){
                  that.loading = 0
                }
            }
          });
        },

        // 现场签到
        xianchangSign(){
          this.$api.signIn({
            address: this.qiandaoAddress,
            location: this.center.lng + ',' + this.center.lat,
            customer_id: this.customer_id,
            customerName: this.customerNamSl,
            note: this.note // 非必传字段
          }).then(res=>{
            this.$toast(res.errmsg)
            if(res.errno === 0){
              this.$router.replace({path: "/work"}) 
              location.reload()
            }
          })
        },

        edit(){
          document.getElementById('note').removeAttribute('disabled')
        },

  },
  created(){
    var that = this; //声明一个变量指向Vue实例this，保证作用域一致
    that.currentTime = new Date().getHours() + ":" + 
      ((new Date().getMinutes() > 9) ? new Date().getMinutes() : '0' + new Date().getMinutes()) + ":" + 
      ((new Date().getSeconds() > 9) ? new Date().getSeconds() : '0' + new Date().getSeconds());
    that.currentDate = new Date().getFullYear() + '-' + new Date().getMonth() + '-' +new Date().getDate()
      
    if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 00:00:00')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 9:00:59'))){
        that.signText = "考勤签到"
        that.ifRed = false
      }else if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 9:00:59')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 12:00:59'))){
        that.signText = "考勤签到"
        that.ifRed = true
      }else if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 12:00:59')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 18:00:59'))){
        that.signText = "考勤签退"
        that.ifRed = true
      }else{
        that.signText = "考勤签退"
        that.ifRed = false
      }
    this.timer = setInterval(function() {
      that.currentTime = //修改数据date
        new Date().getHours() + ":" +
        ((new Date().getMinutes() > 9) ? new Date().getMinutes() : '0' + new Date().getMinutes()) + ":" + 
        ((new Date().getSeconds() > 9) ? new Date().getSeconds() : '0' + new Date().getSeconds());
      that.currentDate = new Date().getFullYear() + '-' + new Date().getMonth() + '-' +new Date().getDate()

      if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 00:00:00')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 9:00:59'))){
        that.signText = "考勤签到"
        that.ifRed = false
      }else if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 9:00:59')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 12:00:59'))){
        that.signText = "考勤签到"
        that.ifRed = true
      }else if(new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) > new Date(Date.parse(that.currentDate + ' 12:00:59')) && new Date(Date.parse(that.currentDate + ' ' + that.currentTime)) <= new Date(Date.parse(that.currentDate + ' 18:00:59'))){
        that.signText = "考勤签退"
        that.ifRed = true
      }else{
        that.signText = "考勤签退"
        that.ifRed = false
      }

    }, 1000);
  },
  beforeDestroy() {
    if (this.timer) {
      clearInterval(this.timer); // 在Vue实例销毁前，清除我们的定时器
    }
  }
  
}
</script>
<style lang="less">
.work{
  min-height: 100%;
  background: #ffffff;
  .sign{
    width: 215px;
    height: 46px;
    box-shadow: 3px 3px 10px 0 #ddd;
    border-radius: 30px;
    display: flex;
    align-items: center;
    position: fixed;
    top: 15px;
    left: 50%;
    margin-left: -108px;
    z-index: 999;
    background: #fff;
    li{
      border-right: 1px solid #eeeeee;
      width: 50%;
      text-align: center;
    }
    li.active{
      color: #1c92ff;
    }
  }

  .signList{
    .list{
      border-bottom: 1px solid #eeeeee;
      padding-left: 15px;
      margin-bottom: 10px;
      >p{
        display: flex;
        align-items: center;
        img{
          width: 20px;
          height: 20px;
          margin-right: 10px;
        }
        span:nth-of-type(2){
          font-size: 12px;
          border: 1px solid #1c92ff;
          color: #1c92ff;
          padding: 3px;
          border-radius: 20px;
          margin-left: 10px;
        }
      }
      >div{
        display: flex;
        margin-top: 10px;
        margin-bottom: 10px;
        >img{
          width: 15px;
          height: 56px;
        }
        >img.icon1{
          width: 15px;
          height: 80px;
        }
        ul{
          margin-left: 10px;
          li{
            display: flex;
            align-items: top;
            color: #aaa;
            margin-top: 5px;
            padding-right: 15px;
            img{
              width: 14px;
              height: 14px;
              margin-right: 10px;
            }
            &:nth-last-child(1),
            &:nth-last-child(2){
              height: auto;
            }
          }
        }
      }
    }
  }
  .van-loading{
        padding: 10px 0;
        text-align: center;
    }
    .zanwu{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding-top: 10%;
        img{
            width: 80%;
        }
    }

  .qiandao{
    background: #fff;
    z-index: 999;
    width: 100%;
    // height: 120px;
    display: flex;
    align-items: center;
    ul{
      width: 100%;
      li{
        display: flex;
        flex-direction: column;
        justify-content: center;
        p:first-of-type{
          font-size: 14px;
          padding: 0 15px;
        }
        .van-cell{
          margin-top: 5px;
          &::after{
            border-bottom: none;
          }
        }
        .van-field__label{
          width: 40px;
        }
        .van-field__control{
          border: 1px solid #f7f7f7;
          padding: 5px;
        }
        &:first-child{
          color: #1c92ff;
          text-align: right;
          padding-right: 15px;
          line-height: 34px;
        }
      }
    }
  }
  
  .xianchangSign{
    background: url('../images/qiandaoBg.png') no-repeat;
    width: 120px;
    height: 120px;
    background-size: 120px 120px;
    position: fixed;
    bottom: 50px;
    left: calc(50% - 60px);
    font-size: 16px;
    color: #fff;
    text-align: center;
    line-height: 20px;
    // display: flex;
    // justify-content: center;
    // align-items: center;
    &.ifRed{
      background: url('../images/qiandaoBgRed.png') no-repeat;
      background-size: 120px 120px;
    }
    .signBtn{
      margin-top: 42px;
    }
    .currentTime{
      font-size: 14px;
    }
    
  }


  .map {
    width: 100%;
    height: calc(100vh - 360px);
  }
  .anchorBL {  
    display:none  
  }
  .map_title{
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.1533rem;
    .map_title_span{
      font-size: 0.29rem;
    }
  }

  .BMap_pop{
    display: none
  }
  .BMap_shadow{
    display: none;
  }
}
</style>