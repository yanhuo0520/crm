<template>
  <div class="tagAdd">
    <van-nav-bar
      :left-text="leftText"
      right-text="确定"
      left-arrow
      @click-left="$router.go(-1)"
      @click-right="addTagFinish"
    />
    <p class="title">标签名称</p>
    <van-field v-model="tagValue" placeholder="请输入标签名称" />
    <p class="title">标签客户(0)</p>
    <van-button round class="addBtn"  @click="tagCustomerSel" icon="http://sc.xfd365.com/crmImages/guanlian.png">添加客户</van-button>
    <div class="tagListCont" v-if="userData != ''">
      <van-index-bar :index-list="indexList">
        <div v-for="(item, index) in userData" :key="index">
          <van-index-anchor :index="index">{{index}}</van-index-anchor>
          <div class="content" v-for="(item1, index1) in item" :key="index1" @click="toDetail(item.id)">
            <p :class="item1.address?'stationA':'stationB'">{{item1.name}} | {{item1.phone}}</p>
            <p class="station" v-if="item1.address">站点名称</p>
          </div>
        </div>
      </van-index-bar>
    </div>
    <div v-else-if="userData == '' && !loading && type" class="zanwu">
      <span>暂无内容</span>
    </div>

    <van-loading v-if="loading" size="24px">加载中...</van-loading>

  </div>
</template>
<script>
export default {
  name: "tagAdd",
  data() {
    return {
      leftText: "新增个人标签",
      type: '',
      tag_id: '',
      loading: 0,
      tagValue: '',
      indexList: [],
      userData: []
    };
  },
  mounted() {
    var type = this.$route.query.type; // 1 其他新增客户    2 建行客户
    var tag_id = this.$route.query.tag_id;
    var tag = this.$route.query.tag;
    console.log(type)
    if(tag_id){
      this.type = type
      this.tag_id = tag_id
      this.tagValue = tag
      this.leftText = "设置标签"
      this.getList();
      console.log("编辑")
    }else{
      console.log("新增")
    }
  },
  methods: {
    addTagFinish() {

    },
    getList() {
      let that = this;
      this.$api.contactList({ type: that.type}).then(res => {
        if (res.errno === 0) {
          that.loading = 0
          if (res.data) {
            that.indexList = Object.keys(res.data);
            that.userData = res.data;
          }
        }
      });
    },
    tagCustomerSel(){
        this.$router.push({
            path: '/tagCustomerSel',
            query: {
                type: this.type
            }
        })
    },
    toDetail(id){
      if(this.type == 2){
        this.$router.push({
            path: '/ccbCustomerDetail',
            query: {
                id: id
            }
        })
      }else{
        this.$router.push({
            path: '/customerDetail',
            query: {
                id: id
            }
        })
      }
        
    },
  },
};
</script>
<style lang="less">
.tagAdd {
  min-height: 100%;
  background: #f5f5f5;
  .van-nav-bar {
    background: url(../images/msgBg.jpg) no-repeat;
    width: 100%;
    height: 50px;
    line-height: 50px;
    background-size: 100% 50px;
    .van-nav-bar__text {
      color: #fff;
    }
    .van-icon {
      color: #fff;
    }
  }
  p.title{
    padding: 0 15px;
    font-size: 14px;
    line-height: 32px;
    &:last-of-type{
      margin-top: 10px;
    }
  }
  .addBtn{
    margin-left: 15px;
    height: 32px;
    line-height: 32px;
  }
  .tagListCont{
    margin-top: 10px;
    border-top: 1px solid #e2e1e1;
  }
  .content {
    padding: 0 25px 0 10px;
    height: 50px;
    background: #fff;
    font-size: 14px;
    border-bottom: 1px solid #eee;
    p{
      &.stationA{
        padding-top: 8px;
      }
      &.stationB{
        padding-top: 16px;
      }
      &.station{
        font-size: 12px;
        color: #666666;
      }
    }
    
  }

  .zanwu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: 10%;
    span.tip{
      color:red;
    }
    img {
      width: 80%;
    }
  }
  .van-loading{
    padding: 10px 0;
    text-align: center;
  }
}
</style>